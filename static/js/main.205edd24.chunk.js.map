{"version":3,"sources":["assets/images/twave.jpg","assets/images/Mapmarker.png","components/searchpage.js","components/resultpage.js","components/locationpage.js","components/statisticspage.js","routes/index.js","App.js","serviceWorker.js","index.js","assets/images/t3.png"],"names":["module","exports","__webpack_require__","p","SearchPage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChangeSearchTerm","bind","assertThisInitialized","onSubmit","state","SearchTerm","redirectToResultPage","e","setState","target","value","preventDefault","obj","axios","post","then","res","console","log","data","redirectToIndex","react_default","a","createElement","react_router","to","className","role","src","require","width","height","alt","contain","class","type","placeholder","aria-label","aria-describedby","onChange","onClick","Component","ReactFC","fcRoot","FusionCharts","Charts","FusionTheme","chartConfigs","dataFormat","dataSource","chart","caption","subCaption","xAxisName","yAxisName","theme","label","chartConfigs2","ResultPage","react_router_dom","id","dist_default","needleColor","needleTransitionDuration","needleTransition","currentValueText","maxValue","ReactFC_default","LocationPage","_useState","useState","latitude","longitude","zoom","_useState2","slicedToArray","viewport","setViewport","_useState3","_useState4","selectedPark","setSelectedPark","useEffect","listener","key","window","addEventListener","removeEventListener","esm","assign","mapboxApiAccessToken","mapStyle","onViewportChange","parkDate","map","park","properties","PARK_ID","geometry","coordinates","radius","background","border","cursor","onClose","NAME","DESCRIPTIO","StatisticsPage","Row","Col","xs","sm","md","Card","CardHeader","CardBody","Main","exact","path","component","App","routes","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.205edd24.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/twave.d80b960f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Mapmarker.2ac0f20e.png\";","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport {Link,Redirect} from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../components/searchpage.css'\r\nimport '../assets/images/t3.png';\r\n// import ResultPage  from './resultpage';\r\n class SearchPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeSearchTerm = this.onChangeSearchTerm.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.state = {\r\n      SearchTerm: '',\r\n      redirectToResultPage: false\r\n    }\r\n  }\r\n  onChangeSearchTerm(e) {\r\n    this.setState({\r\n      SearchTerm: e.target.value\r\n    });\r\n  }\r\n  \r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    if(this.state.SearchTerm){\r\n    const obj = {\r\n      SearchTerm: this.state.SearchTerm,\r\n     \r\n    };\r\n    axios.post('/*Path*/', obj)\r\n        .then(res => console.log(res.data));\r\n    \r\n    this.setState({\r\n      SearchTerm: '',\r\n      redirectToIndex: true\r\n    })\r\n  }\r\n  }\r\n  render() {\r\n\r\n\r\n\r\n    const redirectToIndex = this.state.redirectToIndex;\r\n        if (redirectToIndex === true) {\r\n            return <Redirect to=\"resultpage\" />\r\n        }\r\n         return (<div>\r\n     \r\n            <div className=\"formAlign\">\r\n              <div className=\"alert alert-primary headerCss\" role=\"alert\">\r\n                <img src={require('../assets/images/t3.png')} className=\"rounded-circle float-left shadow-lg p-1 mb-7 bg-white rounded\" width = \"100px\" height=\"100px\" alt=\"Twitter\" contain/>\r\n                <img src={require('../assets/images/twave.jpg')} className=\"rounded-circle float-right shadow-lg p-1 mb-7 bg-white rounded\" width = \"100px\" height=\"100px\" alt=\"TechWave\" contain/>\r\n                  <h1 >SENTIMENT ANALYSIS</h1>\r\n              </div>\r\n            </div>\r\n            <form>                      \r\n                    <div class=\"input11 input-group mb-3\">\r\n                      <input type=\"text\" \r\n                              className=\"form-control input-lg\"\r\n                              placeholder=\"Enter the username or hashtag\" \r\n                              aria-label=\"Recipient's username\" \r\n                              aria-describedby=\"button-addon1\"\r\n                              value={this.state.SearchTerm}\r\n                              onChange={this.onChangeSearchTerm.bind(this)}/>\r\n                              <div class=\"input-group-append\">\r\n                              {this.state.SearchTerm ? \r\n                                  (<button \r\n                                  type=\"Button\" \r\n                                  className=\"btn btn-primary\" \r\n                                  onClick={this.onSubmit} \r\n                                  >\r\n                                                  {/* <Link to=\"/resultpage\">\r\n                                                      <span style={{ color: \"white\" }}> Search </span>\r\n                                                  </Link> */}\r\n                                                  Search\r\n                                  </button>):(false)}\r\n                              </div>\r\n                    </div>\r\n            </form>\r\n    \r\n          </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SearchPage;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport ReactSpeedometer from \"react-d3-speedometer\"\r\nimport './resultpage.css';\r\nimport { Link } from 'react-router-dom';\r\nimport ReactDOM from 'react-dom';\r\nimport FusionCharts from 'fusioncharts';\r\nimport Charts from 'fusioncharts/fusioncharts.charts';\r\nimport ReactFC from 'react-fusioncharts';\r\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.gammel';\r\n\r\nReactFC.fcRoot(FusionCharts, Charts, FusionTheme);\r\nconst myDataSource = {\r\n  \"chart\": {\r\n      \"caption\": \"Total Positive Tweets\",\r\n      \"subCaption\": \"Comparison by Male and Female\",\r\n      \"xAxisName\": \"\",\r\n      \"yAxisName\": \"Total Tweets\",\r\n     \r\n      \"theme\": \"gammel\"\r\n  },\r\n  \"data\": [\r\n      {\r\n          \"label\": \"Male\",\r\n          \"value\": \"290\"\r\n      },\r\n      {\r\n          \"label\": \"Female\",\r\n          \"value\": \"60\"\r\n      }\r\n  ]\r\n};\r\n\r\nconst myDataSource2 = {\r\n  \"chart\": {\r\n      \"caption\": \"Total Negative Tweets\",\r\n      \"subCaption\": \"Comparison by Male and Female\",\r\n      \"xAxisName\": \"\",\r\n      \"yAxisName\": \"Total Tweets\",\r\n     \r\n      \"theme\": \"gammel\"\r\n  },\r\n  \"data\": [\r\n      {\r\n          \"label\": \"Male\",\r\n          \"value\": \"120\"\r\n      },\r\n      {\r\n          \"label\": \"Female\",\r\n          \"value\": \"34\"\r\n      }\r\n  ]\r\n};\r\n\r\nconst chartConfigs = {\r\n    type: 'column2d',\r\n    width: 600,\r\n    height: 400,\r\n    dataFormat: 'json',\r\n    dataSource: myDataSource,\r\n};\r\n\r\nconst chartConfigs2 = {\r\n  type: 'column2d',\r\n  width: 600,\r\n  height: 400,\r\n  dataFormat: 'json',\r\n  dataSource: myDataSource2,\r\n};\r\n\r\nclass ResultPage extends Component {\r\n\r\n  constructor(props) {\r\n      super(props);\r\n      \r\n    }\r\n    \r\n\r\n    render() {\r\n      return (<div>\r\n        <div>\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <Link to={'/'} className=\"navbar-brand\">Home</Link>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n              <ul className=\"navbar-nav mr-auto\">\r\n                <li className=\"nav-item\">\r\n                  <Link to={'/resultpage'} className=\"nav-link\">Sentiment Analysis</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link to={'/statisticspage'} className=\"nav-link\">Statistics</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link to={'/locationpage'} className=\"nav-link\">Location Analysis</Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </nav>\r\n        </div> \r\n<div class=\"container\">\r\n            <div class=\"row\">\r\n                <div class=\"col\">\r\n\r\n                    <ReactSpeedometer\r\n                    value={888}\r\n                    needleColor=\"black\"\r\n                    needleTransitionDuration={500}\r\n                    needleTransition=\"easeLinear\"\r\n                    currentValueText=\"Total Positive Tweets: ${value}\"\r\n                    height={300}\r\n                    width={500}\r\n                    />\r\n                \r\n                </div>\r\n                <div class=\"col\">      \r\n                \r\n                    <ReactSpeedometer\r\n                    value={1230}\r\n                    needleColor=\"black\"\r\n                    needleTransitionDuration={500}\r\n                    needleTransition=\"easeLinear\"\r\n                    currentValueText=\"Total Negative Tweets: ${value}\"\r\n                    height={300}\r\n                    width={500}\r\n                    maxValue={2000}\r\n                    />  \r\n                \r\n                </div>\r\n            </div>\r\n</div>\r\n\r\n            <div class=\"row\">\r\n              <div class=\"col\">\r\n                    <ReactFC {...chartConfigs} />\r\n              </div>\r\n              <div class=\"col\">\r\n                    <ReactFC {...chartConfigs2} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        );\r\n    }\r\n  }\r\n\r\n  export default ResultPage;","import axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React, { useState, useEffect } from \"react\";\r\nimport ReactMapGL, { Marker, Popup } from \"react-map-gl\";\r\nimport * as parkDate from \"../data/data.json\";\r\nexport default function LocationPage() {\r\n  const [viewport, setViewport] = useState({\r\n    latitude: 45.4211,\r\n    longitude: -75.6903,\r\n    width: \"100vw\",\r\n    height: \"100vh\",\r\n    zoom: 0,\r\n  });\r\n  const [selectedPark, setSelectedPark] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const listener = e => {\r\n      if (e.key === \"Escape\") {\r\n        setSelectedPark(null);\r\n      }\r\n    };\r\n    window.addEventListener(\"keydown\", listener);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", listener);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n    <div>\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <Link to={'/'} className=\"navbar-brand\">Home</Link>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n              <ul className=\"navbar-nav mr-auto\">\r\n                <li className=\"nav-item\">\r\n                  <Link to={'/resultpage'} className=\"nav-link\">Sentiment Analysis</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link to={'/statisticspage'} className=\"nav-link\">Statistics</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link to={'/locationpage'} className=\"nav-link\">Location Analysis</Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </nav>\r\n        </div> \r\n      <ReactMapGL\r\n        {...viewport}\r\n        mapboxApiAccessToken={\"pk.eyJ1IjoiYWRpdHlhbWVzaHJhbSIsImEiOiJjand1YzZscGwwNHk2M3ludzZxY3QzYWNlIn0.cm9yXEWO7pvKYxGciQZCnA\"}\r\n        mapStyle=\"mapbox://styles/adityameshram/cjwuengep0i661cqhu2blqfav\"\r\n        onViewportChange={viewport => {\r\n          setViewport(viewport);\r\n        }}\r\n      >\r\n        {parkDate.features.map(park => (\r\n          <Marker\r\n            key={park.properties.PARK_ID}\r\n            latitude={park.geometry.coordinates[1]}\r\n            longitude={park.geometry.coordinates[0]}\r\n          >\r\n            <button\r\n              className=\"marker-btn\"\r\n              width=\"100px\"\r\n              height= \"100px\"\r\n              // borderRadius=\"150 / 2\"\r\n              // border=\"none\"\r\n              // cursor=\"pointer\"\r\n              radius= \"50%\"\r\n              onClick={e => {\r\n                e.preventDefault();\r\n                setSelectedPark(park);\r\n              }}\r\n            >\r\n              <img src={require('../assets/images/Mapmarker.png')} height=\"20px\" width=\"20px\" background=\"none\" border= \"none\" cursor=\"pointer\" alt=\"Skate Park Icon\" />\r\n            </button>\r\n          </Marker>\r\n        ))}\r\n\r\n        {selectedPark ? (\r\n          <Popup\r\n            latitude={selectedPark.geometry.coordinates[1]}\r\n            longitude={selectedPark.geometry.coordinates[0]}\r\n            onClose={() => {\r\n              setSelectedPark(null);\r\n            }}\r\n          >\r\n            <div>\r\n              <h2>{selectedPark.properties.NAME}</h2>\r\n              <p>{selectedPark.properties.DESCRIPTIO}</p>\r\n            </div>\r\n          </Popup>\r\n        ) : null}\r\n      </ReactMapGL>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { Badge, Card, CardBody, CardFooter, CardHeader, Col, Row, Collapse, Fade } from 'reactstrap';\r\nimport { AppSwitch } from '@coreui/react'\r\nimport { Bar, Doughnut, Line, Pie, Polar, Radar } from 'react-chartjs-2';\r\n// import { CustomTooltips } from '@coreui/coreui-plugin-chartjs-custom-tooltips';\r\nimport ReactSpeedometer from \"react-d3-speedometer\"\r\n\r\nconst pie = {\r\n    labels: [\r\n      'Likes',\r\n      'Dislikes',\r\n      \r\n    ],\r\n    datasets: [\r\n      {\r\n        data: [28889,1234],\r\n        backgroundColor: [\r\n          '#FF6384',\r\n          '#36A2EB',\r\n          '#FFCE56',\r\n        ],\r\n        hoverBackgroundColor: [\r\n          '#FF6384',\r\n          '#36A2EB',\r\n          '#FFCE56',\r\n        ],\r\n      }],\r\n  };\r\n\r\n// const options = {\r\n//     tooltips: {\r\n//       enabled: false,\r\n//       custom: CustomTooltips\r\n//     },\r\n//     maintainAspectRatio: false\r\n//   }\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default class StatisticsPage extends Component {\r\n\r\nconstructor(props) {\r\n    super(props);\r\n    }\r\n    \r\n\r\nrender() {\r\n    return(<div>\r\n            <div>\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <Link to={'/'} className=\"navbar-brand\">Home</Link>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav mr-auto\">\r\n                <li className=\"nav-item\">\r\n                <Link to={'/resultpage'} className=\"nav-link\">Sentiment Analysis</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                <Link to={'/statisticspage'} className=\"nav-link\">Statistics</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                <Link to={'/locationpage'} className=\"nav-link\">Location Analysis</Link>\r\n                </li>\r\n            </ul>\r\n            </div>\r\n        </nav>\r\n        </div> \r\n        <div>\r\n        <div className=\"animated fadeIn\">\r\n        <Row>\r\n        <Col xs=\"12\" sm=\"6\" md=\"3\">\r\n            <Card>\r\n            <CardHeader>\r\n                <h6>Tweets (by user) </h6>\r\n            </CardHeader>\r\n            <CardBody>\r\n            <ReactSpeedometer\r\n                    value={333}\r\n                    needleColor=\"black\"\r\n                    needleTransitionDuration={500}\r\n                    needleTransition=\"easeLinear\"\r\n                    currentValueText=\"Total Negative Tweets: ${value}\"\r\n                    height={200}\r\n                    width={300}\r\n                    />  \r\n            </CardBody>\r\n            </Card>\r\n        </Col>\r\n        <Col xs=\"12\" sm=\"6\" md=\"3\">\r\n            <Card>\r\n            <CardHeader>\r\n              <h6>@mentions (of user)</h6>\r\n            </CardHeader>\r\n            <CardBody>\r\n               <h1>23167</h1>\r\n            </CardBody>\r\n            </Card>\r\n        </Col>\r\n        <Col xs=\"12\" sm=\"6\" md=\"3\">\r\n            <Card>\r\n            <CardHeader>\r\n               <h6>Replies (to or from user)</h6>\r\n            </CardHeader>\r\n            <CardBody>\r\n                <h1>45435</h1>\r\n            </CardBody>\r\n            </Card>\r\n        </Col>\r\n        <Col xs=\"12\" sm=\"6\" md=\"3\">\r\n            <Card>\r\n            <CardHeader>\r\n               <h6>Retweets (by user or of user)</h6>\r\n            </CardHeader>\r\n            <CardBody>\r\n                <h1>987</h1>\r\n            </CardBody>\r\n            </Card>\r\n        </Col>\r\n        <Col xs=\"12\" sm=\"6\" md=\"3\">\r\n            <Card>\r\n            <CardHeader>\r\n               <h6>Likes (by user or of user)</h6>\r\n            </CardHeader>\r\n            <CardBody>\r\n                <h1>987</h1>\r\n            </CardBody>\r\n            </Card>\r\n        </Col>\r\n        <Col xs=\"12\" sm=\"6\" md=\"3\">\r\n            <Card>\r\n            <CardHeader>\r\n               <h6>Quote Tweets (by user or of user)</h6>\r\n            </CardHeader>\r\n            <CardBody>\r\n                <h1>987</h1>\r\n            </CardBody>\r\n            </Card>\r\n        </Col>\r\n        <Col xs=\"12\" sm=\"6\" md=\"3\">\r\n            <Card>\r\n            <CardHeader>\r\n               <h6>Follows (by user or of user)</h6>\r\n            </CardHeader>\r\n            <CardBody>\r\n                <h1>987</h1>\r\n            </CardBody>\r\n            </Card>\r\n        </Col>\r\n        <Col xs=\"12\" sm=\"6\" md=\"3\">\r\n            <Card>\r\n            <CardHeader>\r\n               <h6>Unfollows (by user)</h6>\r\n            </CardHeader>\r\n            <CardBody>\r\n                <h1>987</h1>\r\n            </CardBody>\r\n            </Card>\r\n        </Col>\r\n        <Col xs=\"12\" sm=\"6\" md=\"3\">\r\n            <Card>\r\n            <CardHeader>\r\n               <h6>Blocks (by user)</h6>\r\n            </CardHeader>\r\n            <CardBody>\r\n                <h1>987</h1>\r\n            </CardBody>\r\n            </Card>\r\n        </Col>\r\n        <Col xs=\"12\" sm=\"6\" md=\"3\">\r\n            <Card>\r\n            <CardHeader>\r\n               <h6>Unblocks (by user)</h6>\r\n            </CardHeader>\r\n            <CardBody>\r\n                <h1>987</h1>\r\n            </CardBody>\r\n            </Card>\r\n        </Col>\r\n        <Col xs=\"12\" sm=\"6\" md=\"3\">\r\n            <Card>\r\n            <CardHeader>\r\n               <h6>Direct Messages sent (by user)</h6>\r\n            </CardHeader>\r\n            <CardBody>\r\n                <h1>987</h1>\r\n            </CardBody>\r\n            </Card>\r\n        </Col>\r\n        <Col xs=\"12\" sm=\"6\" md=\"3\">\r\n            <Card>\r\n            <CardHeader>\r\n               <h6>Direct Messages received (by user)</h6>\r\n            </CardHeader>\r\n            <CardBody>\r\n                <h1>987</h1>\r\n            </CardBody>\r\n            </Card>\r\n        </Col>\r\n        {/* <Col xs=\"12\" sm=\"6\" md=\"3\">\r\n            <Card>\r\n            <CardHeader>\r\n               <h6>Retweets (by user or of user)</h6>\r\n            </CardHeader>\r\n            <CardBody>\r\n                <h1>987</h1>\r\n            </CardBody>\r\n            </Card>\r\n        </Col>\r\n        <Col xs=\"12\" sm=\"6\" md=\"3\">\r\n            <Card>\r\n            <CardHeader>\r\n               <h6>Retweets (by user or of user)</h6>\r\n            </CardHeader>\r\n            <CardBody>\r\n                <h1>987</h1>\r\n            </CardBody>\r\n            </Card>\r\n        </Col>\r\n        <Col xs=\"12\" sm=\"6\" md=\"3\">\r\n            <Card>\r\n            <CardHeader>\r\n               <h6>Retweets (by user or of user)</h6>\r\n            </CardHeader>\r\n            <CardBody>\r\n                <h1>987</h1>\r\n            </CardBody>\r\n            </Card>\r\n        </Col>\r\n        <Col xs=\"12\" sm=\"6\" md=\"3\">\r\n            <Card>\r\n            <CardHeader>\r\n               <h6>Retweets (by user or of user)</h6>\r\n            </CardHeader>\r\n            <CardBody>\r\n                <h1>987</h1>\r\n            </CardBody>\r\n            </Card>\r\n        </Col>\r\n         */}\r\n        {/*<Col xs=\"12\" sm=\"6\" md=\"4\">\r\n            <Card>\r\n            <CardHeader>\r\n                Card with switch\r\n                <div className=\"card-header-actions\">\r\n                <AppSwitch className={'float-right mb-0'} label color={'info'} defaultChecked size={'sm'}/>\r\n                </div>\r\n            </CardHeader>\r\n            <CardBody>\r\n                Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut\r\n                laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation\r\n                ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.\r\n            </CardBody>\r\n            </Card>\r\n        </Col>\r\n        <Col xs=\"12\" sm=\"6\" md=\"4\">\r\n            <Card>\r\n            <CardHeader>\r\n                Card with label\r\n                <div className=\"card-header-actions\">\r\n                <Badge color=\"success\" className=\"float-right\">Success</Badge>\r\n                </div>\r\n            </CardHeader>\r\n            <CardBody>\r\n                Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut\r\n                laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation\r\n                ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.\r\n            </CardBody>\r\n            </Card>\r\n        </Col>\r\n        <Col xs=\"12\" sm=\"6\" md=\"4\">\r\n            <Card>\r\n            <CardHeader>\r\n                Card with label\r\n                <div className=\"card-header-actions\">\r\n                <Badge pill color=\"danger\" className=\"float-right\">42</Badge>\r\n                </div>\r\n            </CardHeader>\r\n            <CardBody>\r\n                Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut\r\n                laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation\r\n                ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.\r\n            </CardBody>\r\n            </Card>\r\n        </Col> */}\r\n        </Row>\r\n        <Row>\r\n        <Col xs=\"6\" sm=\"6\" md=\"5\">\r\n        \r\n\r\n\r\n        </Col>\r\n        </Row>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport SearchPage from '../components/searchpage';\r\nimport ResultPage from '../components/resultpage';\r\nimport LocationPage from '../components/locationpage';\r\nimport StatisticsPage from '../components/statisticspage';\r\nconst  Main = () => (\r\n    <main>\r\n\r\n        <Switch>\r\n            <Route exact\r\n                path='/'\r\n                component={SearchPage}\r\n            />\r\n            <Route\r\n                path='/resultpage'\r\n                component={ResultPage}\r\n            />\r\n            <Route\r\n                path='/statisticspage'\r\n                component={StatisticsPage}\r\n            />\r\n            <Route\r\n                path='/locationpage'\r\n                component={LocationPage}\r\n            />\r\n        </Switch>\r\n\r\n    </main>\r\n)\r\n\r\nexport default Main;","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Switch} from 'react-router-dom';\r\nimport Main from '../src/routes/index';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (         \r\n    <Router>\r\n    <Switch>\r\n           <Main />  \r\n    </Switch>\r\n   </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(< App/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/t3.438efa02.png\";"],"sourceRoot":""}